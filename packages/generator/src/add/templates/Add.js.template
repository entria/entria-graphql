//@flow
import * as React from 'react';
import { graphql, createFragmentContainer } from 'react-relay/compat';
import { hot } from 'react-hot-loader';

import createQueryRenderer from '../../relay/createQueryRenderer';

import <%= name %>Form from './<%= name %>Form';
import type { <%= name %>Add_viewer } from './__generated__/<%= name %>Add_viewer.graphql';

type Props = {
  viewer: <%= name %>Add_viewer,
};
class <%= name %>Add extends React.PureComponent<Props> {
  render() {
    const { viewer } = this.props;
    return <<%= name %>Form viewer={viewer} />;
  }
}

const <%= name %>AddFragment = createFragmentContainer(<%= name %>Add, {
  viewer: graphql`
    fragment <%= name %>Add_viewer on Viewer {
      id
      ...<%= name %>Form_viewer
    }
  `,
});

export default hot(module)(
  createQueryRenderer(<%= name %>AddFragment, <%= name %>Add, {
    query: graphql`
      query <%= name %>AddQuery {
        viewer {
          ...<%= name %>Add_viewer
        }
      }
    `,
  }),
);
