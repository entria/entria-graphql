// @flow
import { commitMutation, graphql } from 'react-relay/compat';

import RelayStore from '../../relay/RelayStore';

import type {
  <%= name %>AddMutationVariables,
  <%= name %>AddMutationResponse,
} from './__generated__/<%= name %>AddMutation.graphql';

type <%= name %>AddMutationInput = $PropertyType<
  <%= name %>AddMutationVariables,
  'input',
>;

// relay classic
const getConfigs = viewerId => {
  return [
    {
      type: 'RANGE_ADD',
      parentName: 'viewer',
      parentID: viewerId,
      connectionName: '<%= pluralName.toLowerCase() %>',
      edgeName: '<%= name.toLowerCase() %>Edge',
      rangeBehaviors: () => {
        return 'prepend';
      },
    },
  ];
};

const mutation = graphql`
  mutation <%= name %>AddMutation($input: <%= name %>AddInput!) {
    <%= name %>Add(input: $input) {
      <%= name.toLowerCase() %>Edge {
        __typename
        cursor
        node {
          __typename
          id
        }
      }
      error
    }
  }
`;

const commit = (
  viewerId: string,
  input: <%= name %>AddMutationInput,
  onCompleted: (response: <%= name %>AddMutationResponse) => void,
  onError: (error: Error) => void,
) => {
  const variables = {
    input,
  };

  commitMutation(RelayStore._env, {
    mutation,
    variables,
    onCompleted,
    onError,
    configs: getConfigs(viewerId),
  });
};

export default { commit };

